//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment5WebApp.AuthServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auth", Namespace="http://schemas.datacontract.org/2004/07/AuthService")]
    [System.SerializableAttribute()]
    public partial class Auth : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uid {
            get {
                return this.UidField;
            }
            set {
                if ((object.ReferenceEquals(this.UidField, value) != true)) {
                    this.UidField = value;
                    this.RaisePropertyChanged("Uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auths", Namespace="http://schemas.datacontract.org/2004/07/AuthService")]
    [System.SerializableAttribute()]
    public partial class Auths : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Assignment5WebApp.AuthServiceReference.Auth[] AuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XsdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XsiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assignment5WebApp.AuthServiceReference.Auth[] Auth {
            get {
                return this.AuthField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthField, value) != true)) {
                    this.AuthField = value;
                    this.RaisePropertyChanged("Auth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xsd {
            get {
                return this.XsdField;
            }
            set {
                if ((object.ReferenceEquals(this.XsdField, value) != true)) {
                    this.XsdField = value;
                    this.RaisePropertyChanged("Xsd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xsi {
            get {
                return this.XsiField;
            }
            set {
                if ((object.ReferenceEquals(this.XsiField, value) != true)) {
                    this.XsiField = value;
                    this.RaisePropertyChanged("Xsi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthServiceReference.IAuthService")]
    public interface IAuthService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Authenticate", ReplyAction="http://tempuri.org/IAuthService/AuthenticateResponse")]
        string Authenticate(string authUserId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Authenticate", ReplyAction="http://tempuri.org/IAuthService/AuthenticateResponse")]
        System.Threading.Tasks.Task<string> AuthenticateAsync(string authUserId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AuthenticateUsername", ReplyAction="http://tempuri.org/IAuthService/AuthenticateUsernameResponse")]
        string AuthenticateUsername(string username, string password, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AuthenticateUsername", ReplyAction="http://tempuri.org/IAuthService/AuthenticateUsernameResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUsernameAsync(string username, string password, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CreateUser", ReplyAction="http://tempuri.org/IAuthService/CreateUserResponse")]
        bool CreateUser(Assignment5WebApp.AuthServiceReference.Auth auth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/CreateUser", ReplyAction="http://tempuri.org/IAuthService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(Assignment5WebApp.AuthServiceReference.Auth auth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/DeleteUser", ReplyAction="http://tempuri.org/IAuthService/DeleteUserResponse")]
        void DeleteUser(Assignment5WebApp.AuthServiceReference.Auth auth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/DeleteUser", ReplyAction="http://tempuri.org/IAuthService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(Assignment5WebApp.AuthServiceReference.Auth auth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetAuths", ReplyAction="http://tempuri.org/IAuthService/GetAuthsResponse")]
        Assignment5WebApp.AuthServiceReference.Auths GetAuths();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetAuths", ReplyAction="http://tempuri.org/IAuthService/GetAuthsResponse")]
        System.Threading.Tasks.Task<Assignment5WebApp.AuthServiceReference.Auths> GetAuthsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddRoles", ReplyAction="http://tempuri.org/IAuthService/AddRolesResponse")]
        void AddRoles(Assignment5WebApp.AuthServiceReference.Auth auth, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddRoles", ReplyAction="http://tempuri.org/IAuthService/AddRolesResponse")]
        System.Threading.Tasks.Task AddRolesAsync(Assignment5WebApp.AuthServiceReference.Auth auth, string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthServiceChannel : Assignment5WebApp.AuthServiceReference.IAuthService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthServiceClient : System.ServiceModel.ClientBase<Assignment5WebApp.AuthServiceReference.IAuthService>, Assignment5WebApp.AuthServiceReference.IAuthService {
        
        public AuthServiceClient() {
        }
        
        public AuthServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Authenticate(string authUserId, string type) {
            return base.Channel.Authenticate(authUserId, type);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateAsync(string authUserId, string type) {
            return base.Channel.AuthenticateAsync(authUserId, type);
        }
        
        public string AuthenticateUsername(string username, string password, string type) {
            return base.Channel.AuthenticateUsername(username, password, type);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUsernameAsync(string username, string password, string type) {
            return base.Channel.AuthenticateUsernameAsync(username, password, type);
        }
        
        public bool CreateUser(Assignment5WebApp.AuthServiceReference.Auth auth) {
            return base.Channel.CreateUser(auth);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(Assignment5WebApp.AuthServiceReference.Auth auth) {
            return base.Channel.CreateUserAsync(auth);
        }
        
        public void DeleteUser(Assignment5WebApp.AuthServiceReference.Auth auth) {
            base.Channel.DeleteUser(auth);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(Assignment5WebApp.AuthServiceReference.Auth auth) {
            return base.Channel.DeleteUserAsync(auth);
        }
        
        public Assignment5WebApp.AuthServiceReference.Auths GetAuths() {
            return base.Channel.GetAuths();
        }
        
        public System.Threading.Tasks.Task<Assignment5WebApp.AuthServiceReference.Auths> GetAuthsAsync() {
            return base.Channel.GetAuthsAsync();
        }
        
        public void AddRoles(Assignment5WebApp.AuthServiceReference.Auth auth, string type) {
            base.Channel.AddRoles(auth, type);
        }
        
        public System.Threading.Tasks.Task AddRolesAsync(Assignment5WebApp.AuthServiceReference.Auth auth, string type) {
            return base.Channel.AddRolesAsync(auth, type);
        }
    }
}
