//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment4TryIt.TransformXmlServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Upload", Namespace="http://schemas.datacontract.org/2004/07/TransformationService")]
    [System.SerializableAttribute()]
    public partial class Upload : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int code1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int code2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xmlFileContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xmlFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xmlRawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xmlSimpleFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xmlUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xslFileContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xslFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xslRawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xslSimpleFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xslUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code1 {
            get {
                return this.code1Field;
            }
            set {
                if ((this.code1Field.Equals(value) != true)) {
                    this.code1Field = value;
                    this.RaisePropertyChanged("code1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code2 {
            get {
                return this.code2Field;
            }
            set {
                if ((this.code2Field.Equals(value) != true)) {
                    this.code2Field = value;
                    this.RaisePropertyChanged("code2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xmlFileContent {
            get {
                return this.xmlFileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.xmlFileContentField, value) != true)) {
                    this.xmlFileContentField = value;
                    this.RaisePropertyChanged("xmlFileContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xmlFilename {
            get {
                return this.xmlFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.xmlFilenameField, value) != true)) {
                    this.xmlFilenameField = value;
                    this.RaisePropertyChanged("xmlFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xmlRaw {
            get {
                return this.xmlRawField;
            }
            set {
                if ((object.ReferenceEquals(this.xmlRawField, value) != true)) {
                    this.xmlRawField = value;
                    this.RaisePropertyChanged("xmlRaw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xmlSimpleFilename {
            get {
                return this.xmlSimpleFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.xmlSimpleFilenameField, value) != true)) {
                    this.xmlSimpleFilenameField = value;
                    this.RaisePropertyChanged("xmlSimpleFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xmlUrl {
            get {
                return this.xmlUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.xmlUrlField, value) != true)) {
                    this.xmlUrlField = value;
                    this.RaisePropertyChanged("xmlUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xslFileContent {
            get {
                return this.xslFileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.xslFileContentField, value) != true)) {
                    this.xslFileContentField = value;
                    this.RaisePropertyChanged("xslFileContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xslFilename {
            get {
                return this.xslFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.xslFilenameField, value) != true)) {
                    this.xslFilenameField = value;
                    this.RaisePropertyChanged("xslFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xslRaw {
            get {
                return this.xslRawField;
            }
            set {
                if ((object.ReferenceEquals(this.xslRawField, value) != true)) {
                    this.xslRawField = value;
                    this.RaisePropertyChanged("xslRaw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xslSimpleFilename {
            get {
                return this.xslSimpleFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.xslSimpleFilenameField, value) != true)) {
                    this.xslSimpleFilenameField = value;
                    this.RaisePropertyChanged("xslSimpleFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xslUrl {
            get {
                return this.xslUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.xslUrlField, value) != true)) {
                    this.xslUrlField = value;
                    this.RaisePropertyChanged("xslUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransformXmlServiceReference.ITransformationService")]
    public interface ITransformationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransformationService/TransformXml", ReplyAction="http://tempuri.org/ITransformationService/TransformXmlResponse")]
        string TransformXml(Assignment4TryIt.TransformXmlServiceReference.Upload upload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransformationService/TransformXml", ReplyAction="http://tempuri.org/ITransformationService/TransformXmlResponse")]
        System.Threading.Tasks.Task<string> TransformXmlAsync(Assignment4TryIt.TransformXmlServiceReference.Upload upload);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransformationServiceChannel : Assignment4TryIt.TransformXmlServiceReference.ITransformationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransformationServiceClient : System.ServiceModel.ClientBase<Assignment4TryIt.TransformXmlServiceReference.ITransformationService>, Assignment4TryIt.TransformXmlServiceReference.ITransformationService {
        
        public TransformationServiceClient() {
        }
        
        public TransformationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransformationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransformationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransformationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TransformXml(Assignment4TryIt.TransformXmlServiceReference.Upload upload) {
            return base.Channel.TransformXml(upload);
        }
        
        public System.Threading.Tasks.Task<string> TransformXmlAsync(Assignment4TryIt.TransformXmlServiceReference.Upload upload) {
            return base.Channel.TransformXmlAsync(upload);
        }
    }
}
