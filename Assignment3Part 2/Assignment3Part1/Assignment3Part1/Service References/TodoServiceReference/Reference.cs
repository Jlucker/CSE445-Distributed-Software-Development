//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment3Part1.TodoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoItems", Namespace="http://schemas.datacontract.org/2004/07/TodoService")]
    [System.SerializableAttribute()]
    public partial class TodoItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Assignment3Part1.TodoServiceReference.TodoItem[] todoListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assignment3Part1.TodoServiceReference.TodoItem[] todoList {
            get {
                return this.todoListField;
            }
            set {
                if ((object.ReferenceEquals(this.todoListField, value) != true)) {
                    this.todoListField = value;
                    this.RaisePropertyChanged("todoList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoItem", Namespace="http://schemas.datacontract.org/2004/07/TodoService")]
    [System.SerializableAttribute()]
    public partial class TodoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Complete {
            get {
                return this.CompleteField;
            }
            set {
                if ((this.CompleteField.Equals(value) != true)) {
                    this.CompleteField = value;
                    this.RaisePropertyChanged("Complete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TodoServiceReference.ITodoService")]
    public interface ITodoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/AddTodoItem", ReplyAction="http://tempuri.org/ITodoService/AddTodoItemResponse")]
        void AddTodoItem(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/AddTodoItem", ReplyAction="http://tempuri.org/ITodoService/AddTodoItemResponse")]
        System.Threading.Tasks.Task AddTodoItemAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ModifyToDoItem", ReplyAction="http://tempuri.org/ITodoService/ModifyToDoItemResponse")]
        void ModifyToDoItem(System.Guid id, string operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ModifyToDoItem", ReplyAction="http://tempuri.org/ITodoService/ModifyToDoItemResponse")]
        System.Threading.Tasks.Task ModifyToDoItemAsync(System.Guid id, string operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetToDoList", ReplyAction="http://tempuri.org/ITodoService/GetToDoListResponse")]
        Assignment3Part1.TodoServiceReference.TodoItems GetToDoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetToDoList", ReplyAction="http://tempuri.org/ITodoService/GetToDoListResponse")]
        System.Threading.Tasks.Task<Assignment3Part1.TodoServiceReference.TodoItems> GetToDoListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITodoServiceChannel : Assignment3Part1.TodoServiceReference.ITodoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TodoServiceClient : System.ServiceModel.ClientBase<Assignment3Part1.TodoServiceReference.ITodoService>, Assignment3Part1.TodoServiceReference.ITodoService {
        
        public TodoServiceClient() {
        }
        
        public TodoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddTodoItem(string title) {
            base.Channel.AddTodoItem(title);
        }
        
        public System.Threading.Tasks.Task AddTodoItemAsync(string title) {
            return base.Channel.AddTodoItemAsync(title);
        }
        
        public void ModifyToDoItem(System.Guid id, string operation) {
            base.Channel.ModifyToDoItem(id, operation);
        }
        
        public System.Threading.Tasks.Task ModifyToDoItemAsync(System.Guid id, string operation) {
            return base.Channel.ModifyToDoItemAsync(id, operation);
        }
        
        public Assignment3Part1.TodoServiceReference.TodoItems GetToDoList() {
            return base.Channel.GetToDoList();
        }
        
        public System.Threading.Tasks.Task<Assignment3Part1.TodoServiceReference.TodoItems> GetToDoListAsync() {
            return base.Channel.GetToDoListAsync();
        }
    }
}
